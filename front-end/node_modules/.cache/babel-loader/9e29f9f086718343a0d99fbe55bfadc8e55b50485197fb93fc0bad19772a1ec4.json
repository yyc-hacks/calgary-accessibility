{"ast":null,"code":"var _jsxFileName = \"/Users/gill/Desktop/yychacks/calgary-accessibility/front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [doctorList, setDoctorList] = useState([]);\n  const [filterLanguage, setFilterLanguage] = useState(\"\");\n  const [filterGender, setFilterGender] = useState(\"\");\n  useEffect(() => {\n    // Replace 'YOUR_BACKEND_API_ENDPOINT_HERE' with your actual backend API endpoint\n    axios.get(\"http://localhost:8080/doctors\").then(response => {\n      // Convert the Languages property from a string to an array\n      const doctorsWithArrayLanguages = response.data.map(doctor => ({\n        ...doctor,\n        Languages: JSON.parse(doctor.Languages.replace(/'/g, '\"'))\n      }));\n      setDoctorList(doctorsWithArrayLanguages);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  const handleLanguageChange = e => {\n    setFilterLanguage(e.target.value);\n  };\n  const handleGenderChange = e => {\n    setFilterGender(e.target.value);\n  };\n  const filteredDoctors = doctorList.filter(doctor => {\n    const languageMatch = !filterLanguage || doctor.Languages.includes(filterLanguage);\n    const genderMatch = !filterGender || doctor.Gender === filterGender;\n    return languageMatch && genderMatch;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Search App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by Language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterLanguage,\n        onChange: handleLanguageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"English\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Spanish\",\n          children: \"Spanish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterGender,\n        onChange: handleGenderChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Doctors List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [doctor.Name, \" - Language: \", doctor.Languages.join(\", \"), \", Gender:\", \" \", doctor.Gender]\n        }, doctor._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+o2FGDoKfJT5zBNkN2/qsY06e8I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","doctorList","setDoctorList","filterLanguage","setFilterLanguage","filterGender","setFilterGender","get","then","response","doctorsWithArrayLanguages","data","map","doctor","Languages","JSON","parse","replace","catch","error","console","handleLanguageChange","e","target","value","handleGenderChange","filteredDoctors","filter","languageMatch","includes","genderMatch","Gender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Name","join","_id","_c","$RefreshReg$"],"sources":["/Users/gill/Desktop/yychacks/calgary-accessibility/front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [doctorList, setDoctorList] = useState([]);\n  const [filterLanguage, setFilterLanguage] = useState(\"\");\n  const [filterGender, setFilterGender] = useState(\"\");\n\n  useEffect(() => {\n    // Replace 'YOUR_BACKEND_API_ENDPOINT_HERE' with your actual backend API endpoint\n    axios\n      .get(\"http://localhost:8080/doctors\")\n      .then((response) => {\n        // Convert the Languages property from a string to an array\n        const doctorsWithArrayLanguages = response.data.map((doctor) => ({\n          ...doctor,\n          Languages: JSON.parse(doctor.Languages.replace(/'/g, '\"')),\n        }));\n        setDoctorList(doctorsWithArrayLanguages);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  const handleLanguageChange = (e) => {\n    setFilterLanguage(e.target.value);\n  };\n\n  const handleGenderChange = (e) => {\n    setFilterGender(e.target.value);\n  };\n\n  const filteredDoctors = doctorList.filter((doctor) => {\n    const languageMatch =\n      !filterLanguage || doctor.Languages.includes(filterLanguage);\n    const genderMatch = !filterGender || doctor.Gender === filterGender;\n    return languageMatch && genderMatch;\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Doctor Search App</h1>\n      <div>\n        <label>Filter by Language:</label>\n        <select value={filterLanguage} onChange={handleLanguageChange}>\n          <option value=\"\">All</option>\n          <option value=\"English\">English</option>\n          <option value=\"Spanish\">Spanish</option>\n          {/* Add more language options here */}\n        </select>\n      </div>\n      <div>\n        <label>Filter by Gender:</label>\n        <select value={filterGender} onChange={handleGenderChange}>\n          <option value=\"\">All</option>\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n          {/* Add more gender options here */}\n        </select>\n      </div>\n      <div>\n        <h2>Doctors List</h2>\n        <ul>\n          {filteredDoctors.map((doctor) => (\n            <li key={doctor._id}>\n              {doctor.Name} - Language: {doctor.Languages.join(\", \")}, Gender:{\" \"}\n              {doctor.Gender}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CACFW,GAAG,CAAC,+BAA+B,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACA,MAAMC,yBAAyB,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,MAAM,KAAM;QAC/D,GAAGA,MAAM;QACTC,SAAS,EAAEC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACC,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;MAC3D,CAAC,CAAC,CAAC;MACHf,aAAa,CAACQ,yBAAyB,CAAC;IAC1C,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,oBAAoB,GAAIC,CAAC,IAAK;IAClClB,iBAAiB,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,kBAAkB,GAAIH,CAAC,IAAK;IAChChB,eAAe,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAME,eAAe,GAAGzB,UAAU,CAAC0B,MAAM,CAAEd,MAAM,IAAK;IACpD,MAAMe,aAAa,GACjB,CAACzB,cAAc,IAAIU,MAAM,CAACC,SAAS,CAACe,QAAQ,CAAC1B,cAAc,CAAC;IAC9D,MAAM2B,WAAW,GAAG,CAACzB,YAAY,IAAIQ,MAAM,CAACkB,MAAM,KAAK1B,YAAY;IACnE,OAAOuB,aAAa,IAAIE,WAAW;EACrC,CAAC,CAAC;EAEF,oBACEhC,OAAA;IAAKkC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnC,OAAA;MAAAmC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BvC,OAAA;MAAAmC,QAAA,gBACEnC,OAAA;QAAAmC,QAAA,EAAO;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClCvC,OAAA;QAAQ0B,KAAK,EAAErB,cAAe;QAACmC,QAAQ,EAAEjB,oBAAqB;QAAAY,QAAA,gBAC5DnC,OAAA;UAAQ0B,KAAK,EAAC,EAAE;UAAAS,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7BvC,OAAA;UAAQ0B,KAAK,EAAC,SAAS;UAAAS,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxCvC,OAAA;UAAQ0B,KAAK,EAAC,SAAS;UAAAS,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNvC,OAAA;MAAAmC,QAAA,gBACEnC,OAAA;QAAAmC,QAAA,EAAO;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChCvC,OAAA;QAAQ0B,KAAK,EAAEnB,YAAa;QAACiC,QAAQ,EAAEb,kBAAmB;QAAAQ,QAAA,gBACxDnC,OAAA;UAAQ0B,KAAK,EAAC,EAAE;UAAAS,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7BvC,OAAA;UAAQ0B,KAAK,EAAC,MAAM;UAAAS,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClCvC,OAAA;UAAQ0B,KAAK,EAAC,QAAQ;UAAAS,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNvC,OAAA;MAAAmC,QAAA,gBACEnC,OAAA;QAAAmC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBvC,OAAA;QAAAmC,QAAA,EACGP,eAAe,CAACd,GAAG,CAAEC,MAAM,iBAC1Bf,OAAA;UAAAmC,QAAA,GACGpB,MAAM,CAAC0B,IAAI,EAAC,eAAa,EAAC1B,MAAM,CAACC,SAAS,CAAC0B,IAAI,CAAC,IAAI,CAAC,EAAC,WAAS,EAAC,GAAG,EACnE3B,MAAM,CAACkB,MAAM;QAAA,GAFPlB,MAAM,CAAC4B,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGf,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrC,EAAA,CAvEQD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAyEZ,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}